package view

import (
	"fmt"
	"app/domain"
)

// ContactsPageData represents the data structure for the contacts page.
type ContactsPageData struct {
	Query       string
	Contacts    []domain.Contact
	CurrentPage int
	TotalPages  int
}

// toString converts ContactsPageData to a string representation.
func toString(data ContactsPageData) string {
	return fmt.Sprintf("%+v", data)
}

// ActionComponent is a template for rendering actions for a contact.

templ ActionComponent(c domain.Contact) {
	<td class="flex space-x-2">
		@GetButton(fmt.Sprintf("/contacts/%d/edit", c.ID), "Edit", "body", "")
		@GetButton(fmt.Sprintf("/contacts/%d/view", c.ID), "View", "body", "")
		@InlineDeleteButton("Delete", prepareContactDeleteEndPoint(c.ID), "closest tr")
	</td>
}

// fmt.Sprintf("/contacts/%d/edit", c.ID)

templ GetPageButton(url string, name string, target string,class string) {
	<a class={ class } hx-get={ url } hx-push-url="true" hx-target={ target } hx-swap="outerHTML">
		{ name }
	</a>
}

// ContactTable is a template for rendering a contact as a table row.

templ ContactTableRow(contact domain.Contact) {
	<tr class="border-b hover:bg-gray-100">
		<td class="py-2 px-4">{ fmt.Sprint(contact.ID) }</td>
		<td class="py-2 px-4">{ contact.FirstName }</td>
		<td class="py-2 px-4">{ contact.LastName }</td>
		<td class="py-2 px-4">{ contact.Phone }</td>
		<td class="py-2 px-4">{ contact.Email }</td>
		@ActionComponent(contact)
	</tr>
}

templ ContactsPageBody(c context.Context, data ContactsPageData , isRaw bool) {
	<div id="main" class="max-w-4xl mx-auto mt-8">
		<table class="w-full border-collapse">
			<tbody>
				for _, contact := range data.Contacts {
					@ContactTableRow(contact)
				}
			</tbody>
		</table>
		<div class="mt-4 flex justify-center">
			<span>
				if isRaw {
					if  data.CurrentPage > 1 {
						@GetButton(fmt.Sprintf("/contacts?page=%d", data.CurrentPage-1),"Previous","#main","")
					}
					if len(data.Contacts) == 10 {
						@GetButton(fmt.Sprintf("/contacts?page=%d", data.CurrentPage+1),"Next","#main","")
					}
				} else {
					if  data.CurrentPage > 1 {
						@GetButton(fmt.Sprintf("/contacts?page=%d", data.CurrentPage-1),"Previous","body","")
					}
					if len(data.Contacts) == 10 {
						@GetButton(fmt.Sprintf("/contacts?page=%d", data.CurrentPage+1),"Next","body","")
					}
				}
			</span>
		</div>
	</div>
}
