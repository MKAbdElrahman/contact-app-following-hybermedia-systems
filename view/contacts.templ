package view

import (
	"fmt"
	"app/domain"
)

// ContactsPageData represents the data structure for the contacts page.
type ContactsPageData struct {
	Query    string
	Contacts []domain.Contact
}

// toString converts ContactsPageData to a string representation.
func toString(data ContactsPageData) string {
	return fmt.Sprintf("%+v", data)
}

// ActionComponent is a template for rendering actions for a contact.

templ ActionComponent(c domain.Contact) {
	<td>
		<a href={ "/contacts/" + templ.URL(fmt.Sprint(c.ID)) + "/edit" } class="action-link">Edit</a>
		<a href={ "/contacts/" + templ.URL(fmt.Sprint(c.ID)) + "/view" } class="action-link">View</a>
	</td>
}

// ContactTable is a template for rendering a contact as a table row.

templ ContactTable(contact domain.Contact) {
	<tr>
		<td>{ fmt.Sprint(contact.ID) }</td>
		<td>{ contact.FirstName }</td>
		<td>{ contact.LastName }</td>
		<td>{ contact.Phone }</td>
		<td>{ contact.Email }</td>
		@ActionComponent(contact)
	</tr>
}

templ ContactsPageBody(c context.Context, data ContactsPageData) {
	<div class="contacts-page-container">
		<table class="contacts-table">
			<tbody>
				for _, contact := range data.Contacts {
					@ContactTable(contact)
				}
			</tbody>
		</table>
		<p class="add-contact-link">
			<a class="add-contact-link" href="/contacts/new">Add Contact</a>
		</p>
	</div>
}
